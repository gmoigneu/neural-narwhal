/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as VariableImport } from './routes/variable'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as FoldersFolderSlugIndexImport } from './routes/folders/$folderSlug/index'
import { Route as FoldersFolderSlugEditImport } from './routes/folders/$folderSlug.edit'
import { Route as FoldersFolderSlugPromptSlugIndexImport } from './routes/folders/$folderSlug/$promptSlug/index'
import { Route as FoldersFolderSlugPromptSlugEditImport } from './routes/folders/$folderSlug/$promptSlug/edit'

// Create/Update Routes

const VariableRoute = VariableImport.update({
  id: '/variable',
  path: '/variable',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const FoldersFolderSlugIndexRoute = FoldersFolderSlugIndexImport.update({
  id: '/folders/$folderSlug/',
  path: '/folders/$folderSlug/',
  getParentRoute: () => rootRoute,
} as any)

const FoldersFolderSlugEditRoute = FoldersFolderSlugEditImport.update({
  id: '/folders/$folderSlug/edit',
  path: '/folders/$folderSlug/edit',
  getParentRoute: () => rootRoute,
} as any)

const FoldersFolderSlugPromptSlugIndexRoute =
  FoldersFolderSlugPromptSlugIndexImport.update({
    id: '/folders/$folderSlug/$promptSlug/',
    path: '/folders/$folderSlug/$promptSlug/',
    getParentRoute: () => rootRoute,
  } as any)

const FoldersFolderSlugPromptSlugEditRoute =
  FoldersFolderSlugPromptSlugEditImport.update({
    id: '/folders/$folderSlug/$promptSlug/edit',
    path: '/folders/$folderSlug/$promptSlug/edit',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/variable': {
      id: '/variable'
      path: '/variable'
      fullPath: '/variable'
      preLoaderRoute: typeof VariableImport
      parentRoute: typeof rootRoute
    }
    '/folders/$folderSlug/edit': {
      id: '/folders/$folderSlug/edit'
      path: '/folders/$folderSlug/edit'
      fullPath: '/folders/$folderSlug/edit'
      preLoaderRoute: typeof FoldersFolderSlugEditImport
      parentRoute: typeof rootRoute
    }
    '/folders/$folderSlug/': {
      id: '/folders/$folderSlug/'
      path: '/folders/$folderSlug'
      fullPath: '/folders/$folderSlug'
      preLoaderRoute: typeof FoldersFolderSlugIndexImport
      parentRoute: typeof rootRoute
    }
    '/folders/$folderSlug/$promptSlug/edit': {
      id: '/folders/$folderSlug/$promptSlug/edit'
      path: '/folders/$folderSlug/$promptSlug/edit'
      fullPath: '/folders/$folderSlug/$promptSlug/edit'
      preLoaderRoute: typeof FoldersFolderSlugPromptSlugEditImport
      parentRoute: typeof rootRoute
    }
    '/folders/$folderSlug/$promptSlug/': {
      id: '/folders/$folderSlug/$promptSlug/'
      path: '/folders/$folderSlug/$promptSlug'
      fullPath: '/folders/$folderSlug/$promptSlug'
      preLoaderRoute: typeof FoldersFolderSlugPromptSlugIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/variable': typeof VariableRoute
  '/folders/$folderSlug/edit': typeof FoldersFolderSlugEditRoute
  '/folders/$folderSlug': typeof FoldersFolderSlugIndexRoute
  '/folders/$folderSlug/$promptSlug/edit': typeof FoldersFolderSlugPromptSlugEditRoute
  '/folders/$folderSlug/$promptSlug': typeof FoldersFolderSlugPromptSlugIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/variable': typeof VariableRoute
  '/folders/$folderSlug/edit': typeof FoldersFolderSlugEditRoute
  '/folders/$folderSlug': typeof FoldersFolderSlugIndexRoute
  '/folders/$folderSlug/$promptSlug/edit': typeof FoldersFolderSlugPromptSlugEditRoute
  '/folders/$folderSlug/$promptSlug': typeof FoldersFolderSlugPromptSlugIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/variable': typeof VariableRoute
  '/folders/$folderSlug/edit': typeof FoldersFolderSlugEditRoute
  '/folders/$folderSlug/': typeof FoldersFolderSlugIndexRoute
  '/folders/$folderSlug/$promptSlug/edit': typeof FoldersFolderSlugPromptSlugEditRoute
  '/folders/$folderSlug/$promptSlug/': typeof FoldersFolderSlugPromptSlugIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/variable'
    | '/folders/$folderSlug/edit'
    | '/folders/$folderSlug'
    | '/folders/$folderSlug/$promptSlug/edit'
    | '/folders/$folderSlug/$promptSlug'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/variable'
    | '/folders/$folderSlug/edit'
    | '/folders/$folderSlug'
    | '/folders/$folderSlug/$promptSlug/edit'
    | '/folders/$folderSlug/$promptSlug'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/variable'
    | '/folders/$folderSlug/edit'
    | '/folders/$folderSlug/'
    | '/folders/$folderSlug/$promptSlug/edit'
    | '/folders/$folderSlug/$promptSlug/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  VariableRoute: typeof VariableRoute
  FoldersFolderSlugEditRoute: typeof FoldersFolderSlugEditRoute
  FoldersFolderSlugIndexRoute: typeof FoldersFolderSlugIndexRoute
  FoldersFolderSlugPromptSlugEditRoute: typeof FoldersFolderSlugPromptSlugEditRoute
  FoldersFolderSlugPromptSlugIndexRoute: typeof FoldersFolderSlugPromptSlugIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  VariableRoute: VariableRoute,
  FoldersFolderSlugEditRoute: FoldersFolderSlugEditRoute,
  FoldersFolderSlugIndexRoute: FoldersFolderSlugIndexRoute,
  FoldersFolderSlugPromptSlugEditRoute: FoldersFolderSlugPromptSlugEditRoute,
  FoldersFolderSlugPromptSlugIndexRoute: FoldersFolderSlugPromptSlugIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/variable",
        "/folders/$folderSlug/edit",
        "/folders/$folderSlug/",
        "/folders/$folderSlug/$promptSlug/edit",
        "/folders/$folderSlug/$promptSlug/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/variable": {
      "filePath": "variable.tsx"
    },
    "/folders/$folderSlug/edit": {
      "filePath": "folders/$folderSlug.edit.tsx"
    },
    "/folders/$folderSlug/": {
      "filePath": "folders/$folderSlug/index.tsx"
    },
    "/folders/$folderSlug/$promptSlug/edit": {
      "filePath": "folders/$folderSlug/$promptSlug/edit.tsx"
    },
    "/folders/$folderSlug/$promptSlug/": {
      "filePath": "folders/$folderSlug/$promptSlug/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
