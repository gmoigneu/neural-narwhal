// Auto-generated by an AI, check for accuracy
declare global {
  // Define PromptFile and IndexedFolder to match main/index.ts structure
  interface PromptFile {
    name: string // File name, e.g., "example-prompt.md"
    path: string // Full path to the file
    frontmatter?: Record<string, unknown> // Parsed YAML frontmatter
    contentBody?: string // The content of the prompt after the frontmatter
    lastIndexed: number // Timestamp of the last indexing
  }

  interface IndexedFolder {
    name: string // Folder name
    path: string // Full path to the folder
    slug: string // Slugified path, added based on main/index.ts
    prompts: PromptFile[] // List of prompt files in this folder
  }

  interface Window {
    electron: unknown // Replace 'unknown' with the actual type of electronAPI if known
    api: {
      getVaultPath: () => Promise<string | undefined>
      selectNativeFolder: () => Promise<string | undefined>
      saveVaultDirectory: (path: string) => Promise<{
        success: boolean
        path?: string
        error?: string
      }>
      onShowVaultSetupDialog: (callback: () => void) => () => void
      onVaultReady: (callback: (path: string) => void) => () => void
      onVaultSetSuccess: (callback: () => void) => () => void
      onVaultIndexed: (callback: (indexedFolders: IndexedFolder[]) => void) => () => void
      getIndexedFolders: () => Promise<IndexedFolder[]>
      getPromptsForFolder: (folderSlug: string) => Promise<PromptFile[] | undefined>
    }
  }
}

// Ensure no top-level exports, this file is for global augmentation.
